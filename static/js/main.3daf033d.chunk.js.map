{"version":3,"sources":["components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/TodoFilter/TodoFilter.jsx","App.js","index.js"],"names":["Todo","item","handleStatus","className","cn","completed","type","checked","onChange","id","title","TodoList","items","setTodos","prevTodos","map","key","TodoFilter","href","TodoApp","useState","todos","newTodo","setNewTodo","allCompleted","setAllCompleted","onSubmit","event","preventDefault","Date","trim","addTodo","placeholder","value","target","length","todo","htmlFor","filter","ReactDOM","render","App","document","getElementById"],"mappings":"8TAGaA,EAAO,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAI3B,OACE,wBAAIC,UAAWC,IAAG,CAAE,UAAaH,EAAKI,aACpC,yBAAKF,UAAU,QACb,2BACEG,KAAK,WACLH,UAAU,SACVI,QAASN,EAAKI,UACdG,SAAU,kBAAMN,EAAaD,EAAKQ,OAEpC,+BAAQR,EAAKS,OACb,4BAAQJ,KAAK,SAASH,UAAU,aAElC,2BAAOG,KAAK,OAAOH,UAAU,WCdtBQ,EAAW,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE1BX,EAAe,SAACO,GAEpBI,GAAS,SAAAC,GAAS,OAAIA,EACnBC,KAAI,SAAAd,GACH,OAAIQ,IAAOR,EAAKQ,GACP,eAAIR,GAEJ,2BACFA,GADL,IAEEI,WAAYJ,EAAKI,mBAM3B,OACE,wBAAIF,UAAU,aACXS,EAAMG,KAAI,SAAAd,GAAI,OACX,kBAAC,EAAD,CACEA,KAAMA,EACNe,IAAKf,EAAKQ,GACVP,aAAcA,SC1Bbe,EAAa,WAExB,OACE,wBAAId,UAAU,WACZ,4BACE,uBAAGe,KAAK,KAAKf,UAAU,YAAvB,QAGF,4BACE,uBAAGe,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,gBCoEOC,MA9Ef,WAAoB,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHR,EADG,OAEaO,mBAAS,IAFtB,mBAEVE,EAFU,KAEDC,EAFC,OAGuBH,oBAAS,GAHhC,mBAGVI,EAHU,KAGIC,EAHJ,KA8BjB,OACE,6BAAStB,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCAEA,0BAAMuB,SAAU,SAAAC,GAAK,OA9BX,SAACA,GACVL,IAILK,EAAMC,iBACNf,GAAS,SAAAC,GAAS,4BAAQA,GAAR,CAChB,CACEL,IAAK,IAAIoB,KACTnB,MAAOY,EAAQQ,OACfzB,WAAW,QAGfkB,EAAW,KAiBkBQ,CAAQJ,KAC/B,2BACErB,KAAK,OACLH,UAAU,WACV6B,YAAY,yBACZC,MAAOX,EACPd,SAAU,SAAAmB,GAAK,OAAIJ,EAAWI,EAAMO,OAAOD,YAKhDZ,EAAMc,OAAS,GACd,oCACE,6BAAShC,UAAU,QACjB,2BACEG,KAAK,WACLG,GAAG,aACHN,UAAU,aACVI,QAASiB,EACThB,SAAU,kBAhCpBiB,GAAiBD,QAEjBX,EAASQ,EAAMN,KAAI,SAAAqB,GAAI,kCAClBA,GADkB,IAErB/B,WAAYmB,WA8BN,2BAAOa,QAAQ,cAAf,wBACA,kBAAC,EAAD,CAAUzB,MAAOS,EAAOR,SAAUA,KAGpC,4BAAQV,UAAU,UAChB,0BAAMA,UAAU,cAAhB,UACMkB,EACDiB,QAAO,SAAAF,GAAI,OAAuB,IAAnBA,EAAK/B,aAAqB8B,OAF9C,gBAKA,kBAAC,EAAD,MAEA,4BAAQ7B,KAAK,SAASH,UAAU,mBAAhC,uBChEZoC,IAASC,OACP,kBAACC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.3daf033d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\n\nexport const Todo = ({ item, handleStatus }) => {\n  // const [todoCompleted, setTodoCompleted] = useState(false);\n  \n\n  return (\n    <li className={cn({ 'completed': item.completed })}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={item.completed}\n          onChange={() => handleStatus(item.id)}\n        />\n        <label>{item.title}</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  )\n}","import React from 'react';\n\nimport './TodoList.scss';\nimport { Todo } from '../Todo';\n\nexport const TodoList = ({ items, setTodos }) => {\n\n  const handleStatus = (id) => {\n\n    setTodos(prevTodos => prevTodos\n      .map(item => {\n        if (id !== item.id) {\n          return {...item}\n        } else {\n          return {\n            ...item,\n            completed: !item.completed,\n          }\n        }\n      }))\n    }\n\n  return (\n    <ul className=\"todo-list\">\n      {items.map(item => (\n          <Todo\n            item={item}\n            key={item.id}\n            handleStatus={handleStatus}\n          />\n      ))}\n    </ul>\n  )\n}","import React from 'react';\n\nexport const TodoFilter = () => {\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a href=\"#/\" className=\"selected\">All</a>\n      </li>\n\n      <li>\n        <a href=\"#/active\">Active</a>\n      </li>\n\n      <li>\n        <a href=\"#/completed\">Completed</a>\n      </li>\n    </ul>\n  )\n}","import React, { useState } from 'react';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\n\nfunction TodoApp() {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [allCompleted, setAllCompleted] = useState(false);\n\n  const addTodo = (event) => {\n    if (!newTodo) {\n      return;\n    }\n\n    event.preventDefault();\n    setTodos(prevTodos => [...prevTodos,\n      {\n        id: +new Date(),\n        title: newTodo.trim(),\n        completed: false,\n      },\n    ]);\n    setNewTodo('');\n  };\n\n  const checkAllCompleted = () => {\n    setAllCompleted(!allCompleted);\n\n    setTodos(todos.map(todo => ({\n      ...todo,\n      completed: !allCompleted,\n    })));\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={event => addTodo(event)}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={newTodo}\n            onChange={event => setNewTodo(event.target.value)}\n          />\n        </form>\n      </header>\n\n      {todos.length > 0 && (\n        <>\n          <section className=\"main\">\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              checked={allCompleted}\n              onChange={() => checkAllCompleted()}\n            />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n            <TodoList items={todos} setTodos={setTodos} />\n          </section>\n\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {`${todos\n                .filter(todo => todo.completed === false).length} todos left`}\n            </span>\n\n            <TodoFilter />\n\n            <button type=\"button\" className=\"clear-completed\">\n              Clear completed\n            </button>\n          </footer>\n        </>\n      )}\n    </section>\n  );\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\n// import './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}