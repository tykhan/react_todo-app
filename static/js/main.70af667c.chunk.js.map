{"version":3,"sources":["components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/TodoFilter/TodoFilter.jsx","App.js","index.js"],"names":["Todo","item","handleStatus","setTodos","useState","editingTodo","setEditingTodo","title","editedTitle","setEditedTitle","destroyTodo","id","prevTodos","filter","todo","handleChanges","useCallback","newTitle","map","trim","handleKeyDown","event","value","target","key","className","cn","completed","type","checked","onChange","onDoubleClick","onClick","autoFocus","onKeyDown","onBlur","TodoList","items","TodoFilter","handleFilter","FILTERS","all","active","TodoApp","todos","newTodo","setNewTodo","allCompleted","setAllCompleted","setFilter","useEffect","localStorage","JSON","parse","getItem","setItem","stringify","filteredTodos","useMemo","completedTodos","areAllTodosCompleted","length","uncompletedTodos","areAllTodosUncompleted","isSomeCompleted","some","addTodo","preventDefault","Date","checkAllCompleted","onSubmit","placeholder","htmlFor","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.70af667c.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const Todo = ({ item, handleStatus, setTodos }) => {\n  const [editingTodo, setEditingTodo] = useState(false);\n  const [editedTitle, setEditedTitle] = useState(item.title);\n\n  const destroyTodo = (id) => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n  };\n\n  const handleChanges = useCallback((newTitle) => {\n    if (!newTitle) {\n      destroyTodo(item.id)\n    }\n\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        if (todo.id === item.id) {\n          return {\n            ...todo,\n            title: newTitle,\n          }\n        }\n        return todo;\n      })\n    })\n    setEditedTitle(newTitle.trim());\n    setEditingTodo(false);\n  }, [editedTitle])\n\n  const handleKeyDown = useCallback((event) => {\n    const {value} = event.target;\n    const {key} = event;\n\n    if (key === 'Escape') {\n      setEditedTitle(item.title);\n      setEditingTodo(false);\n      return;\n    } else if (key === 'Enter') {\n      handleChanges(value);\n      setEditedTitle(value.trim())\n      setEditingTodo(false);\n    }\n  }, [editedTitle])\n\n  return (\n    <li\n      className={cn({ 'completed': item.completed, 'editing': editingTodo })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={item.completed}\n          onChange={() => handleStatus(item.id)}\n        />\n        <label\n          onDoubleClick={() => setEditingTodo(true)}\n        >\n          {item.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => destroyTodo(item.id)}\n        />\n      </div>\n      {editingTodo && (\n        <input\n          autoFocus\n          value={editedTitle}\n          type=\"text\"\n          className=\"edit\"\n          onChange={event => setEditedTitle(event.target.value)}\n          onKeyDown={event => handleKeyDown(event)}\n          onBlur={event => handleChanges(event.target.value)}\n        />\n      )}\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleStatus: PropTypes.func.isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './TodoList.css';\nimport { Todo } from '../Todo';\n\nexport const TodoList = ({ items, setTodos }) => {\n  const handleStatus = useCallback((id) => {\n    setTodos(prevTodos => prevTodos\n      .map((item) => {\n        if (id !== item.id) {\n          return { ...item };\n        }\n\n        return {\n          ...item,\n          completed: !item.completed,\n        };\n      }));\n  }, [items]);\n\n  return (\n    <ul className=\"todo-list\">\n      {items.map(item => (\n        <Todo\n          item={item}\n          key={item.id}\n          handleStatus={handleStatus}\n          setTodos={setTodos}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport './filters.css';\n\nexport const TodoFilter = ({ handleFilter, filter, FILTERS }) => (\n  <ul className=\"filters\">\n    <li>\n      <button\n        type=\"button\"\n        onClick={() => handleFilter(FILTERS.all)}\n        className={cn({ 'selected': filter === FILTERS.all })}\n      >\n        All\n      </button>\n    </li>\n\n    <li>\n      <button\n        type=\"button\"\n        onClick={() => handleFilter(FILTERS.active)}\n        className={cn({ 'selected': filter === FILTERS.active })}\n      >\n        Active\n      </button>\n    </li>\n\n    <li>\n      <button\n        type=\"button\"\n        onClick={() => handleFilter(FILTERS.completed)}\n        className={cn({ 'selected': filter === FILTERS.completed })}\n      >\n        Completed\n      </button>\n    </li>\n  </ul>\n);\n\nTodoFilter.propTypes = {\n  handleFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import React, { useState, useMemo, useEffect, useCallback } from 'react';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\n\nconst FILTERS = {\n  all: 'All',\n  active: 'Active',\n  completed: 'Completed',\n};\n\nfunction TodoApp() {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [allCompleted, setAllCompleted] = useState(false);\n  const [filter, setFilter] = useState(FILTERS.all);\n\n  useEffect(() => {\n    if (localStorage.todos) {\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const filteredTodos = useMemo(() => todos.filter((todo) => {\n    switch (filter) {\n      case FILTERS.completed:\n        return todo.completed;\n\n      case FILTERS.active:\n        return !todo.completed;\n\n      default:\n        return todo;\n    }\n  }), [filter, todos]);\n\n  const completedTodos = useMemo(\n    () => todos.filter(todo => todo.completed), [todos],\n  );\n  const areAllTodosCompleted = useMemo(\n    () => completedTodos.length === todos.length, [completedTodos],\n  );\n\n  const uncompletedTodos = useMemo(\n    () => todos.filter(todo => !todo.completed), [todos],\n  );\n  const areAllTodosUncompleted = useMemo(\n    () => uncompletedTodos.length === todos.length, [uncompletedTodos],\n  );\n\n  const isSomeCompleted = useMemo(\n    () => todos.some(todo => todo.completed), [todos],\n  );\n\n  const addTodo = useCallback((event) => {\n    event.preventDefault();\n\n    if (!newTodo.trim()) {\n      return;\n    }\n\n    setTodos(prevTodos => [...prevTodos,\n      {\n        id: +new Date(),\n        title: newTodo.trim(),\n        completed: false,\n      },\n    ]);\n    setNewTodo('');\n  }, [newTodo]);\n\n  const checkAllCompleted = useCallback(() => {\n    setAllCompleted(!allCompleted);\n\n    if (areAllTodosCompleted) {\n      setTodos(todos.map(todo => ({\n        ...todo,\n        completed: false,\n      })));\n\n      return;\n    }\n\n    if (areAllTodosUncompleted) {\n      setTodos(todos.map(todo => ({\n        ...todo,\n        completed: true,\n      })));\n\n      return;\n    }\n\n    setTodos(todos.map(todo => ({\n      ...todo,\n      completed: !allCompleted,\n    })));\n  }, [todos]);\n\n  const clearCompleted = () => {\n    setTodos(prevTodos => prevTodos.filter(todo => !todo.completed));\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={event => addTodo(event)}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={newTodo}\n            onChange={event => setNewTodo(event.target.value)}\n            onBlur={event => addTodo(event)}\n          />\n        </form>\n      </header>\n\n      {todos.length > 0 && (\n        <>\n          <section className=\"main\">\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              checked={areAllTodosCompleted}\n              onChange={checkAllCompleted}\n            />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n            <TodoList items={filteredTodos} setTodos={setTodos} />\n          </section>\n\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {`${uncompletedTodos.length > 1\n                ? `${uncompletedTodos.length} todos left`\n                : `${uncompletedTodos.length} todo left`}`}\n            </span>\n\n            <TodoFilter\n              handleFilter={setFilter}\n              filter={filter}\n              FILTERS={FILTERS}\n            />\n\n            {isSomeCompleted && (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                onClick={clearCompleted}\n              >\n                Clear completed\n              </button>\n            )}\n\n          </footer>\n        </>\n      )}\n    </section>\n  );\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}